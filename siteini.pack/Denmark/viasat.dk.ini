﻿﻿**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: viasat.dk
* @MinSWversion: 1.1.1/54
* @Revision 0 - [12/05/2016] Blackbear199
*  - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=viasat.dk|timezone=Europe/Oslo|maxdays=7|cultureinfo=da-DK|charset=UTF-8|titlematchfactor=90|ratingsystem=DK}
****
url_index{url|https://www.viasat.dk/epg/events?channelData=1&channels=|channel|&from=|urldate|&to=|urldate|}

url_index.headers {customheader=Accept-Encoding=gzip,deflate}
index_urlchannellogo {url||"logo_positive_url":"||?itok=|}}}
urldate.format {datestring|yyyyMMdd}
index_showsplit.scrub {multi|{"posts":[|||],"request"}
index_showsplit.modify{substring(type=regex)|\{\"id\":\"\d+.*?\"li\":.*?\}}
scope.range{(splitindex)|end}
global_temp_2.modify {calculate(format=date,unix)}
loop{(each "index_temp_9" in 'index_showsplit')|end}
index_temp_8.modify {substring(type=regex)|'index_temp_9' "\"st":(\d+),"}
index_temp_7.modify {addend('index_temp_8' > 'global_temp_2')|'index_temp_9'##}
end_loop
index_showsplit.modify {substring(type=regex)|'index_temp_7' "(.*?)##"}
index_showsplit.modify {remove(type=regex)|\"e_.*?et\":\d+\}?\,?"}
index_temp_1.modify {substring(type=regex)|'index_showsplit' "\"st":(\d+),"}
index_temp_1.modify {cleanup(removeduplicates link="index_showsplit")}
index_showsplit.modify {cleanup(style=unidecode)}
index_showsplit.modify {cleanup(style=jsondecode)}
*index_showsplit.modify {(debug)}
end_scope
index_start.scrub {single|"st":||,"}
*index_stop.scrub {single|"et":||,"}
index_title.scrub {single|"t":"||",}
index_description.scrub{single|"ls":"||",} 
index_episode.scrub {single(pattern="S'S0'")|"s":"||"}
index_episode.modify {addstart(not "")|S}
index_category.scrub{single|"c":||,"|,"}
index_category.modify{replace( = "1")|'index_category'|Film}
index_category.modify{replace( = "2")|'index_category'|Andet}
index_category.modify{replace( = "3")|'index_category'|Serie}
index_category.modify{replace( = "4")|'index_category'|Nyheder}
index_category.modify{replace( = "5")|'index_category'|Underholdning}
index_category.modify{replace( = "6")|'index_category'|Sport}
index_category.modify{replace( = "7")|'index_category'|Børn}
index_category.modify{replace( = "11")|'index_category'|Dokumentar}
index_category.modify{replace( = "123")|'index_category'|Andet}
index_showicon.scrub {single|"url":"||?itok=|"}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index{url|https://www.viasat.dk/epg/events?channelData=1&channels=&from=|urldate|&to=|urldate|}
*index_site_channel.scrub {multi()|"channelData":|"title":"|","website_url"|}}}}
*index_site_id.scrub {multi()|"channelData":|"channel_id":"|",|}}}}
*index_site_channel.modify{cleanup(style=jsondecode)}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
