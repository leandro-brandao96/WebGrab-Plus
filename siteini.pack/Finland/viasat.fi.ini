**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: viasat.fi
* @MinSWversion: V3.1
* @Revision 1 - [14/03/2021] Mat8861
* @Revision 0 - [26/01/2019] Mat8861
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------

site {url=viasat.fi|timezone=Europe/Oslo|maxdays=7|cultureinfo=no|charset=UTF-8|titlematchfactor=90}
**********
scope.range{(urlindex)|end}
urldate.format {datestring|yyyy-MM-dd}
global_temp_1.modify {set|'config_site_id'}
global_temp_2.modify {calculate(format=date,unix)|'urldate'}
url_index{url()|https://content-service.viasat.fi/api/epg/events?date=|urldate|&category-filter=}
url_index.headers {customheader=Accept-Encoding=gzip,deflate} 
end_scope
*
index_urlchannellogo {url|https:|{"id":"'global_temp_1'","icon":"||",|",}

scope.range{(splitindex)|end}
index_showsplit.scrub {regex()||{"id":"'global_temp_1'","icon":".*?"events":\[.*?\}\}\]\}||}
index_showsplit.modify {replace|\},\{|\}\|\{}
*index_showsplit.modify {(debug)}
end_scope
index_start.scrub {single|"time":"||Z|Z}
*index_stop.scrub {single|"duration":"||"|"}
index_title.scrub {regex||"title":"(.+?)","details":||}
index_category.scrub{single(separator="","")|"categories":["||"]|"]}
index_category.modify{cleanup(style=name)}
index_description.scrub{single|"description":"||",|",}
index_temp_1.scrub{regex||"episode":([1-9]*),"||}
index_temp_1.modify{addstart(not "")|E}
index_episode.scrub {regex(pattern="S'S1' E'E1'""S'S1'""E'E1'")||"season":([1-9]*),"||}
index_episode.modify {addstart(not "")|S}
index_episode.modify {addend(not "")|'index_temp_1'}
index_showicon.scrub {single|"image":"||",|",}
index_showicon.modify {remove(type=regex)||.*?(\?size=\d+x\d+)",||}
index_premiere.scrub {regex||"live":(true),"||}
index_premiere.modify {addend|(lang=null)}

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*index_site_channel.scrub {regex()||{"id":"\d+","icon":".*?","name":"([^"]*)","events":||}
*index_site_id.scrub {regex()||{"id":"(\d+)","icon":".*?","name":"[^"]*","events":||}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
