**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: port.hu
* @MinSWversion: V3.1
* @Revision 17 - [02/09/2018] Blackbear199
*   - urlindex change,showsplit fix
* @Revision 16 - [13/01/2016] Blackbear199
*   - add actor role
*   - site improvements
* @Revision 15 - [22/11/2016] Blackbear199
*   - add Live,Repeat
*   - showsplit fix(some shows were skipped).
* @Revision 14 - [20/11/2016] Blackbear199
*   - description fix
* @Remarks:
*
* @header_end
**------------------------------------------------------------------------------------------------
site {url=port.hu|timezone=Europe/Budapest|maxdays=14|cultureinfo=hu-HU|charset=UTF-8|titlematchfactor=90|allowlastdayoverflow}
site {ratingsystem=IMDb|episodesystem=onscreen}
*
url_index{url|https://port.hu/tvapi?channel_id%5B%5D=tvchannel-|channel|&date=|urldate|}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
*
urldate.format {datestring|yyyy-MM-dd}
*
index_urlchannellogo {url||logo":"||"|"}
*
index_showsplit.scrub {multi|"programs":[||],"article"|],"article"}
scope.range{(splitindex)|end}
index_showsplit.modify {replace|\},\{|\}\|\{}
index_temp_1.modify {substring(type=regex)|'index_showsplit' ""start_ts":(\d+)"}
index_temp_1.modify {cleanup(removeduplicates link="index_showsplit")}
*index_showsplit.modify {(debug)}
end_scope
*
index_urlshow {url|https://port.hu|"film_url":"||"|"}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
*
index_start.scrub {regex||"start_datetime":"(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})[-+]\d{2}:\d{2}"||}
index_stop.scrub {regex||"end_datetime":"(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})[-+]\d{2}:\d{2}"||}
index_title.scrub {single|"title":"||",|",}
index_subtitle.scrub {single|"episode_title":"||",|",}
*
titleoriginal.scrub {single|<div class="title">|<small>|</small>|</div>}
description.scrub {single|itemprop="description">|<article>|</article>|</div>}
actor.scrub {multi(max=8)|<!-- actors -->|<span itemprop="name">|</span>|<!-- /actors -->}
temp_1.scrub {multi(max=8)|<!-- actors -->|<div class="role-type character">|</div>|<!-- /actors -->}
director.scrub {multi(max=2)|<label>rendező:</label>|<span class="itemprop" itemprop="name">|</span>|</li>}
writer.scrub {multi(max=2)|<label>író:</label>|<span class="itemprop" itemprop="name">|</span>|</li>}
writer.scrub {multi(max=2)|<label>forgatókönyvíró:</label>|<span class="itemprop" itemprop="name">|</span>|</li>}
composer.scrub {multi(max=2)|<label>zene:</label>|<span class="itemprop" itemprop="name">|</span>|</li>}
producer.scrub {multi(max=2)|<label>producer:</label>|<span class="itemprop" itemprop="name">|</span>|</li>}
presenter.scrub {multi(max=2)|<label>műsorvezető:</label>|<span class="itemprop" itemprop="name">|</span>|</li>}
rating.scrub {single|<section class="row no-hr details-box">|nmhh_akk/|_age_icon|</section>}
ratingicon.scrub {single|<section class="row no-hr details-box">|src="|"|</section>}
starrating.scrub {single|<div class="vote-box"|data-value="|"|</div>}
showicon.scrub {single|<!-- images -->|<img src="|"|</a>}
productiondate.scrub {single|<section class="row no-hr details-box">|<div>|</div>|</section>}
category.scrub {single(separator=", " include="film""dráma""horror""thriller""sorozat""magaz""show""reality""krimi""vígjáték""sci-fi""műsor""magyarul""beszélő")|<section class="row no-hr details-box">|<div>|</div>|</section>}
episode.scrub {single(pattern="'S1' / 'E1'. rész""/ 'E1'. rész""'E1'. rész" separator=", " include="rész")|<section class="row no-hr details-box">|<div>|</div>|</section>}
*
scope.range{(showdetails)|end}
title.modify {addstart|'index_title'}
titleoriginal.modify {cleanup(tags="/=/")}
titleoriginal.modify {cleanup(tags="/=/")}
titleoriginal.modify {addend(not "")|(lang=en)}
productiondate.modify {calculate(format=productiondate)}
description.modify {cleanup(tags="<strong>""</strong>")}
description.modify {cleanup(tags="<"">")}
description.modify {cleanup}
category.modify {cleanup(tags="<"">")}
category.modify {cleanup(style=name)}
*
temp_1.modify {cleanup}
temp_2.modify {set|0}
loop{(each "temp_3" in 'actor')|end}
temp_4.modify {substring(type=element)|'temp_1' 'temp_2' 1}
temp_4.modify {set(not "")|(role='temp_4')}
temp_5.modify {addend|'temp_3''temp_4'#_#}
temp_2.modify {calculate(format=F0)|1 +}
end_loop
actor.modify {substring(type=regex)|'temp_5' "(.*?)#_#"}
*
rating.modify {clear("0")}
starrating.modify {calculate(not "" format=F1)}
episode.modify {cleanup(tags="<"">")}
episode.modify {cleanup(style=roman2arabicnumeral)}
end_scope
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index{url|https://port.hu/tvapi/init?i_page_id=1}
*index_site_id.scrub {multi|{"id":"tvchannel-||"|"}
*index_site_channel.scrub {multi|"name":"||"|"}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
